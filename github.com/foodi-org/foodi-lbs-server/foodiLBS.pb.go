// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v3.11.4
// source: foodiLBS.proto

package foodi_lbs_server

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LengthCorpus int32

const (
	LengthCorpus_KILOMETER LengthCorpus = 0 // km
	LengthCorpus_METER     LengthCorpus = 1 // m
)

// Enum value maps for LengthCorpus.
var (
	LengthCorpus_name = map[int32]string{
		0: "KILOMETER",
		1: "METER",
	}
	LengthCorpus_value = map[string]int32{
		"KILOMETER": 0,
		"METER":     1,
	}
)

func (x LengthCorpus) Enum() *LengthCorpus {
	p := new(LengthCorpus)
	*p = x
	return p
}

func (x LengthCorpus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LengthCorpus) Descriptor() protoreflect.EnumDescriptor {
	return file_foodiLBS_proto_enumTypes[0].Descriptor()
}

func (LengthCorpus) Type() protoreflect.EnumType {
	return &file_foodiLBS_proto_enumTypes[0]
}

func (x LengthCorpus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LengthCorpus.Descriptor instead.
func (LengthCorpus) EnumDescriptor() ([]byte, []int) {
	return file_foodiLBS_proto_rawDescGZIP(), []int{0}
}

type SortCorpus int32

const (
	SortCorpus_ASC  SortCorpus = 0
	SortCorpus_DESC SortCorpus = 1
)

// Enum value maps for SortCorpus.
var (
	SortCorpus_name = map[int32]string{
		0: "ASC",
		1: "DESC",
	}
	SortCorpus_value = map[string]int32{
		"ASC":  0,
		"DESC": 1,
	}
)

func (x SortCorpus) Enum() *SortCorpus {
	p := new(SortCorpus)
	*p = x
	return p
}

func (x SortCorpus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SortCorpus) Descriptor() protoreflect.EnumDescriptor {
	return file_foodiLBS_proto_enumTypes[1].Descriptor()
}

func (SortCorpus) Type() protoreflect.EnumType {
	return &file_foodiLBS_proto_enumTypes[1]
}

func (x SortCorpus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SortCorpus.Descriptor instead.
func (SortCorpus) EnumDescriptor() ([]byte, []int) {
	return file_foodiLBS_proto_rawDescGZIP(), []int{1}
}

// 将一个位置写入redis geo key set
type GeoAddRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key       string  `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`               // redis geo set key
	Name      string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`             // 位置名称
	Longitude float64 `protobuf:"fixed64,3,opt,name=longitude,proto3" json:"longitude,omitempty"` // 经度
	Latitude  float64 `protobuf:"fixed64,4,opt,name=latitude,proto3" json:"latitude,omitempty"`   // 维度
}

func (x *GeoAddRequest) Reset() {
	*x = GeoAddRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foodiLBS_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeoAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeoAddRequest) ProtoMessage() {}

func (x *GeoAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_foodiLBS_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeoAddRequest.ProtoReflect.Descriptor instead.
func (*GeoAddRequest) Descriptor() ([]byte, []int) {
	return file_foodiLBS_proto_rawDescGZIP(), []int{0}
}

func (x *GeoAddRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GeoAddRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GeoAddRequest) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *GeoAddRequest) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

type GeoAddReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Idx int64 `protobuf:"varint,1,opt,name=idx,proto3" json:"idx,omitempty"`
}

func (x *GeoAddReply) Reset() {
	*x = GeoAddReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foodiLBS_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeoAddReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeoAddReply) ProtoMessage() {}

func (x *GeoAddReply) ProtoReflect() protoreflect.Message {
	mi := &file_foodiLBS_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeoAddReply.ProtoReflect.Descriptor instead.
func (*GeoAddReply) Descriptor() ([]byte, []int) {
	return file_foodiLBS_proto_rawDescGZIP(), []int{1}
}

func (x *GeoAddReply) GetIdx() int64 {
	if x != nil {
		return x.Idx
	}
	return 0
}

// 获取位置的经纬度参数
type PositionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key     string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`         // redis geo set key
	Members []string `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty"` // 需要查询的位置列表
}

func (x *PositionRequest) Reset() {
	*x = PositionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foodiLBS_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PositionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionRequest) ProtoMessage() {}

func (x *PositionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_foodiLBS_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionRequest.ProtoReflect.Descriptor instead.
func (*PositionRequest) Descriptor() ([]byte, []int) {
	return file_foodiLBS_proto_rawDescGZIP(), []int{2}
}

func (x *PositionRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PositionRequest) GetMembers() []string {
	if x != nil {
		return x.Members
	}
	return nil
}

// 获取位置的经纬度响应
type PositionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pos []*Position `protobuf:"bytes,1,rep,name=pos,proto3" json:"pos,omitempty"`
}

func (x *PositionReply) Reset() {
	*x = PositionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foodiLBS_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PositionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionReply) ProtoMessage() {}

func (x *PositionReply) ProtoReflect() protoreflect.Message {
	mi := &file_foodiLBS_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionReply.ProtoReflect.Descriptor instead.
func (*PositionReply) Descriptor() ([]byte, []int) {
	return file_foodiLBS_proto_rawDescGZIP(), []int{3}
}

func (x *PositionReply) GetPos() []*Position {
	if x != nil {
		return x.Pos
	}
	return nil
}

type Position struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Longitude float64 `protobuf:"fixed64,1,opt,name=Longitude,proto3" json:"Longitude,omitempty"` // 经度
	Latitude  float64 `protobuf:"fixed64,2,opt,name=Latitude,proto3" json:"Latitude,omitempty"`   // 纬度
}

func (x *Position) Reset() {
	*x = Position{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foodiLBS_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position) ProtoMessage() {}

func (x *Position) ProtoReflect() protoreflect.Message {
	mi := &file_foodiLBS_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Position.ProtoReflect.Descriptor instead.
func (*Position) Descriptor() ([]byte, []int) {
	return file_foodiLBS_proto_rawDescGZIP(), []int{4}
}

func (x *Position) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *Position) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

// 获取位置的geo hash string value
type HashRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key     string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`         // redis geo set key
	Members []string `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty"` // 需要查询的位置列表
}

func (x *HashRequest) Reset() {
	*x = HashRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foodiLBS_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HashRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashRequest) ProtoMessage() {}

func (x *HashRequest) ProtoReflect() protoreflect.Message {
	mi := &file_foodiLBS_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashRequest.ProtoReflect.Descriptor instead.
func (*HashRequest) Descriptor() ([]byte, []int) {
	return file_foodiLBS_proto_rawDescGZIP(), []int{5}
}

func (x *HashRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *HashRequest) GetMembers() []string {
	if x != nil {
		return x.Members
	}
	return nil
}

type HashReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash []string `protobuf:"bytes,1,rep,name=hash,proto3" json:"hash,omitempty"`
}

func (x *HashReply) Reset() {
	*x = HashReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foodiLBS_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HashReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashReply) ProtoMessage() {}

func (x *HashReply) ProtoReflect() protoreflect.Message {
	mi := &file_foodiLBS_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashReply.ProtoReflect.Descriptor instead.
func (*HashReply) Descriptor() ([]byte, []int) {
	return file_foodiLBS_proto_rawDescGZIP(), []int{6}
}

func (x *HashReply) GetHash() []string {
	if x != nil {
		return x.Hash
	}
	return nil
}

// 计算两个位置之间的距离参数
type DistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key        string       `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Member1    string       `protobuf:"bytes,2,opt,name=member1,proto3" json:"member1,omitempty"`                                   // 位置1
	Member2    string       `protobuf:"bytes,3,opt,name=member2,proto3" json:"member2,omitempty"`                                   // 位置2
	LengthType LengthCorpus `protobuf:"varint,4,opt,name=lengthType,proto3,enum=foodiLBS.LengthCorpus" json:"lengthType,omitempty"` // 距离单位,m/km
}

func (x *DistRequest) Reset() {
	*x = DistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foodiLBS_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistRequest) ProtoMessage() {}

func (x *DistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_foodiLBS_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistRequest.ProtoReflect.Descriptor instead.
func (*DistRequest) Descriptor() ([]byte, []int) {
	return file_foodiLBS_proto_rawDescGZIP(), []int{7}
}

func (x *DistRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DistRequest) GetMember1() string {
	if x != nil {
		return x.Member1
	}
	return ""
}

func (x *DistRequest) GetMember2() string {
	if x != nil {
		return x.Member2
	}
	return ""
}

func (x *DistRequest) GetLengthType() LengthCorpus {
	if x != nil {
		return x.LengthType
	}
	return LengthCorpus_KILOMETER
}

// 计算两个位置之间的距离返回
type DistReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dist       float64 `protobuf:"fixed64,1,opt,name=dist,proto3" json:"dist,omitempty"`
	LengthType string  `protobuf:"bytes,2,opt,name=lengthType,proto3" json:"lengthType,omitempty"`
}

func (x *DistReply) Reset() {
	*x = DistReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foodiLBS_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DistReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistReply) ProtoMessage() {}

func (x *DistReply) ProtoReflect() protoreflect.Message {
	mi := &file_foodiLBS_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistReply.ProtoReflect.Descriptor instead.
func (*DistReply) Descriptor() ([]byte, []int) {
	return file_foodiLBS_proto_rawDescGZIP(), []int{8}
}

func (x *DistReply) GetDist() float64 {
	if x != nil {
		return x.Dist
	}
	return 0
}

func (x *DistReply) GetLengthType() string {
	if x != nil {
		return x.LengthType
	}
	return ""
}

// 返回坐标位置半径范围内的坐标请求参数
type RadioOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key        string            `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`                                           // redis geo set key
	Longitude  float64           `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`                             // 当前坐标:经度
	Latitude   float64           `protobuf:"fixed64,3,opt,name=latitude,proto3" json:"latitude,omitempty"`                               // 当前坐标:纬度
	Radius     float64           `protobuf:"fixed64,4,opt,name=radius,proto3" json:"radius,omitempty"`                                   // 搜索半径
	LengthType LengthCorpus      `protobuf:"varint,5,opt,name=lengthType,proto3,enum=foodiLBS.LengthCorpus" json:"lengthType,omitempty"` // 搜索单位:m|km|ft|mi
	Option     *RadioOrderOption `protobuf:"bytes,9,opt,name=option,proto3" json:"option,omitempty"`
}

func (x *RadioOrderRequest) Reset() {
	*x = RadioOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foodiLBS_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RadioOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RadioOrderRequest) ProtoMessage() {}

func (x *RadioOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_foodiLBS_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RadioOrderRequest.ProtoReflect.Descriptor instead.
func (*RadioOrderRequest) Descriptor() ([]byte, []int) {
	return file_foodiLBS_proto_rawDescGZIP(), []int{9}
}

func (x *RadioOrderRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *RadioOrderRequest) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *RadioOrderRequest) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *RadioOrderRequest) GetRadius() float64 {
	if x != nil {
		return x.Radius
	}
	return 0
}

func (x *RadioOrderRequest) GetLengthType() LengthCorpus {
	if x != nil {
		return x.LengthType
	}
	return LengthCorpus_KILOMETER
}

func (x *RadioOrderRequest) GetOption() *RadioOrderOption {
	if x != nil {
		return x.Option
	}
	return nil
}

// 返回坐标位置半径范围内的坐标返回,按照距离从进到远排序.以二维数组形式返回附带geo相关内容
type RadioOrderReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location []*GeoLocation `protobuf:"bytes,1,rep,name=location,proto3" json:"location,omitempty"`
}

func (x *RadioOrderReply) Reset() {
	*x = RadioOrderReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foodiLBS_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RadioOrderReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RadioOrderReply) ProtoMessage() {}

func (x *RadioOrderReply) ProtoReflect() protoreflect.Message {
	mi := &file_foodiLBS_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RadioOrderReply.ProtoReflect.Descriptor instead.
func (*RadioOrderReply) Descriptor() ([]byte, []int) {
	return file_foodiLBS_proto_rawDescGZIP(), []int{10}
}

func (x *RadioOrderReply) GetLocation() []*GeoLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

type RadioOrderOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// withCoord=true，则返回结果会带上匹配位置的经纬度
	WithCoord bool `protobuf:"varint,1,opt,name=withCoord,proto3" json:"withCoord,omitempty"`
	// withDist=true，则返回结果会带上匹配位置与给定地理位置的距离
	WithDist bool `protobuf:"varint,2,opt,name=withDist,proto3" json:"withDist,omitempty"`
	// withGeoHash=true，则返回结果会带上匹配位置的hash值
	WithGeoHash bool `protobuf:"varint,3,opt,name=withGeoHash,proto3" json:"withGeoHash,omitempty"`
	// 排序,默认结果是未排序的，ASC:从近到远排序;DESC:从远到近排序
	Sort string `protobuf:"bytes,4,opt,name=sort,proto3" json:"sort,omitempty"`
}

func (x *RadioOrderOption) Reset() {
	*x = RadioOrderOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foodiLBS_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RadioOrderOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RadioOrderOption) ProtoMessage() {}

func (x *RadioOrderOption) ProtoReflect() protoreflect.Message {
	mi := &file_foodiLBS_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RadioOrderOption.ProtoReflect.Descriptor instead.
func (*RadioOrderOption) Descriptor() ([]byte, []int) {
	return file_foodiLBS_proto_rawDescGZIP(), []int{11}
}

func (x *RadioOrderOption) GetWithCoord() bool {
	if x != nil {
		return x.WithCoord
	}
	return false
}

func (x *RadioOrderOption) GetWithDist() bool {
	if x != nil {
		return x.WithDist
	}
	return false
}

func (x *RadioOrderOption) GetWithGeoHash() bool {
	if x != nil {
		return x.WithGeoHash
	}
	return false
}

func (x *RadioOrderOption) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

type GeoLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string  `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Longitude float64 `protobuf:"fixed64,2,opt,name=Longitude,proto3" json:"Longitude,omitempty"` // 经度
	Latitude  float64 `protobuf:"fixed64,3,opt,name=Latitude,proto3" json:"Latitude,omitempty"`   // 纬度
	Dist      float64 `protobuf:"fixed64,4,opt,name=Dist,proto3" json:"Dist,omitempty"`
	GeoHash   int64   `protobuf:"varint,5,opt,name=GeoHash,proto3" json:"GeoHash,omitempty"`
}

func (x *GeoLocation) Reset() {
	*x = GeoLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foodiLBS_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeoLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeoLocation) ProtoMessage() {}

func (x *GeoLocation) ProtoReflect() protoreflect.Message {
	mi := &file_foodiLBS_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeoLocation.ProtoReflect.Descriptor instead.
func (*GeoLocation) Descriptor() ([]byte, []int) {
	return file_foodiLBS_proto_rawDescGZIP(), []int{12}
}

func (x *GeoLocation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GeoLocation) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *GeoLocation) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *GeoLocation) GetDist() float64 {
	if x != nil {
		return x.Dist
	}
	return 0
}

func (x *GeoLocation) GetGeoHash() int64 {
	if x != nil {
		return x.GeoHash
	}
	return 0
}

// 返回坐标位置半径范围内的坐标请求参数
type RadioOrderStoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key        string     `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`                             // redis geo set key
	Longitude  float64    `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`               // 当前坐标:经度
	Latitude   float64    `protobuf:"fixed64,3,opt,name=latitude,proto3" json:"latitude,omitempty"`                 // 当前坐标:纬度
	Radius     float64    `protobuf:"fixed64,4,opt,name=radius,proto3" json:"radius,omitempty"`                     // 搜索半径
	LengthType string     `protobuf:"bytes,5,opt,name=lengthType,proto3" json:"lengthType,omitempty"`               // 搜索单位:m|km|ft|mi
	Sort       SortCorpus `protobuf:"varint,6,opt,name=sort,proto3,enum=foodiLBS.SortCorpus" json:"sort,omitempty"` // 排序方式
	StoreKey   string     `protobuf:"bytes,7,opt,name=storeKey,proto3" json:"storeKey,omitempty"`                   // 存储 redis key
	Count      int64      `protobuf:"varint,8,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *RadioOrderStoreRequest) Reset() {
	*x = RadioOrderStoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foodiLBS_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RadioOrderStoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RadioOrderStoreRequest) ProtoMessage() {}

func (x *RadioOrderStoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_foodiLBS_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RadioOrderStoreRequest.ProtoReflect.Descriptor instead.
func (*RadioOrderStoreRequest) Descriptor() ([]byte, []int) {
	return file_foodiLBS_proto_rawDescGZIP(), []int{13}
}

func (x *RadioOrderStoreRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *RadioOrderStoreRequest) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *RadioOrderStoreRequest) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *RadioOrderStoreRequest) GetRadius() float64 {
	if x != nil {
		return x.Radius
	}
	return 0
}

func (x *RadioOrderStoreRequest) GetLengthType() string {
	if x != nil {
		return x.LengthType
	}
	return ""
}

func (x *RadioOrderStoreRequest) GetSort() SortCorpus {
	if x != nil {
		return x.Sort
	}
	return SortCorpus_ASC
}

func (x *RadioOrderStoreRequest) GetStoreKey() string {
	if x != nil {
		return x.StoreKey
	}
	return ""
}

func (x *RadioOrderStoreRequest) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type RadioMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string            `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Member string            `protobuf:"bytes,2,opt,name=member,proto3" json:"member,omitempty"`
	Radio  float64           `protobuf:"fixed64,3,opt,name=radio,proto3" json:"radio,omitempty"`
	Unit   LengthCorpus      `protobuf:"varint,4,opt,name=unit,proto3,enum=foodiLBS.LengthCorpus" json:"unit,omitempty"`
	Sort   SortCorpus        `protobuf:"varint,5,opt,name=sort,proto3,enum=foodiLBS.SortCorpus" json:"sort,omitempty"`
	Count  int64             `protobuf:"varint,6,opt,name=count,proto3" json:"count,omitempty"`
	Option *RadioOrderOption `protobuf:"bytes,7,opt,name=option,proto3" json:"option,omitempty"`
}

func (x *RadioMemberRequest) Reset() {
	*x = RadioMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foodiLBS_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RadioMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RadioMemberRequest) ProtoMessage() {}

func (x *RadioMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_foodiLBS_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RadioMemberRequest.ProtoReflect.Descriptor instead.
func (*RadioMemberRequest) Descriptor() ([]byte, []int) {
	return file_foodiLBS_proto_rawDescGZIP(), []int{14}
}

func (x *RadioMemberRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *RadioMemberRequest) GetMember() string {
	if x != nil {
		return x.Member
	}
	return ""
}

func (x *RadioMemberRequest) GetRadio() float64 {
	if x != nil {
		return x.Radio
	}
	return 0
}

func (x *RadioMemberRequest) GetUnit() LengthCorpus {
	if x != nil {
		return x.Unit
	}
	return LengthCorpus_KILOMETER
}

func (x *RadioMemberRequest) GetSort() SortCorpus {
	if x != nil {
		return x.Sort
	}
	return SortCorpus_ASC
}

func (x *RadioMemberRequest) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *RadioMemberRequest) GetOption() *RadioOrderOption {
	if x != nil {
		return x.Option
	}
	return nil
}

type RadioMemberStoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key        string     `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"` // redis geo set key
	Member     string     `protobuf:"bytes,2,opt,name=member,proto3" json:"member,omitempty"`
	Radius     float64    `protobuf:"fixed64,4,opt,name=radius,proto3" json:"radius,omitempty"`                     // 搜索半径
	LengthType string     `protobuf:"bytes,5,opt,name=lengthType,proto3" json:"lengthType,omitempty"`               // 搜索单位:m|km|ft|mi
	Sort       SortCorpus `protobuf:"varint,6,opt,name=sort,proto3,enum=foodiLBS.SortCorpus" json:"sort,omitempty"` // 排序方式
	StoreKey   string     `protobuf:"bytes,7,opt,name=storeKey,proto3" json:"storeKey,omitempty"`                   // 存储 redis key
}

func (x *RadioMemberStoreRequest) Reset() {
	*x = RadioMemberStoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foodiLBS_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RadioMemberStoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RadioMemberStoreRequest) ProtoMessage() {}

func (x *RadioMemberStoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_foodiLBS_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RadioMemberStoreRequest.ProtoReflect.Descriptor instead.
func (*RadioMemberStoreRequest) Descriptor() ([]byte, []int) {
	return file_foodiLBS_proto_rawDescGZIP(), []int{15}
}

func (x *RadioMemberStoreRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *RadioMemberStoreRequest) GetMember() string {
	if x != nil {
		return x.Member
	}
	return ""
}

func (x *RadioMemberStoreRequest) GetRadius() float64 {
	if x != nil {
		return x.Radius
	}
	return 0
}

func (x *RadioMemberStoreRequest) GetLengthType() string {
	if x != nil {
		return x.LengthType
	}
	return ""
}

func (x *RadioMemberStoreRequest) GetSort() SortCorpus {
	if x != nil {
		return x.Sort
	}
	return SortCorpus_ASC
}

func (x *RadioMemberStoreRequest) GetStoreKey() string {
	if x != nil {
		return x.StoreKey
	}
	return ""
}

type DeliverDemoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeliverDemoRequest) Reset() {
	*x = DeliverDemoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foodiLBS_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliverDemoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliverDemoRequest) ProtoMessage() {}

func (x *DeliverDemoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_foodiLBS_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliverDemoRequest.ProtoReflect.Descriptor instead.
func (*DeliverDemoRequest) Descriptor() ([]byte, []int) {
	return file_foodiLBS_proto_rawDescGZIP(), []int{16}
}

type DeliverDemoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Regis bool `protobuf:"varint,1,opt,name=regis,proto3" json:"regis,omitempty"`
}

func (x *DeliverDemoReply) Reset() {
	*x = DeliverDemoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_foodiLBS_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliverDemoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliverDemoReply) ProtoMessage() {}

func (x *DeliverDemoReply) ProtoReflect() protoreflect.Message {
	mi := &file_foodiLBS_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliverDemoReply.ProtoReflect.Descriptor instead.
func (*DeliverDemoReply) Descriptor() ([]byte, []int) {
	return file_foodiLBS_proto_rawDescGZIP(), []int{17}
}

func (x *DeliverDemoReply) GetRegis() bool {
	if x != nil {
		return x.Regis
	}
	return false
}

var File_foodiLBS_proto protoreflect.FileDescriptor

var file_foodiLBS_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x66, 0x6f, 0x6f, 0x64, 0x69, 0x4c, 0x42, 0x53, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x66, 0x6f, 0x6f, 0x64, 0x69, 0x4c, 0x42, 0x53, 0x22, 0x6f, 0x0a, 0x0d, 0x47, 0x65,
	0x6f, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0x1f, 0x0a, 0x0b, 0x47,
	0x65, 0x6f, 0x41, 0x64, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64,
	0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x78, 0x22, 0x3d, 0x0a, 0x0f,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x35, 0x0a, 0x0d, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x03,
	0x70, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x6f, 0x6f, 0x64,
	0x69, 0x4c, 0x42, 0x53, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x70,
	0x6f, 0x73, 0x22, 0x44, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x4c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x09, 0x4c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x4c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08,
	0x4c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0x39, 0x0a, 0x0b, 0x48, 0x61, 0x73, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x22, 0x1f, 0x0a, 0x09, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x22, 0x8b, 0x01, 0x0a, 0x0b, 0x44, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x31,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x32, 0x12, 0x36, 0x0a, 0x0a, 0x6c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16,
	0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x69, 0x4c, 0x42, 0x53, 0x2e, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x43, 0x6f, 0x72, 0x70, 0x75, 0x73, 0x52, 0x0a, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x3f, 0x0a, 0x09, 0x44, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x64,
	0x69, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x54,
	0x79, 0x70, 0x65, 0x22, 0xe3, 0x01, 0x0a, 0x11, 0x52, 0x61, 0x64, 0x69, 0x6f, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6c,
	0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09,
	0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x12, 0x36, 0x0a,
	0x0a, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x16, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x69, 0x4c, 0x42, 0x53, 0x2e, 0x4c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x43, 0x6f, 0x72, 0x70, 0x75, 0x73, 0x52, 0x0a, 0x6c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x69, 0x4c, 0x42, 0x53,
	0x2e, 0x52, 0x61, 0x64, 0x69, 0x6f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x44, 0x0a, 0x0f, 0x52, 0x61, 0x64,
	0x69, 0x6f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x31, 0x0a, 0x08,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x69, 0x4c, 0x42, 0x53, 0x2e, 0x47, 0x65, 0x6f, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x82, 0x01, 0x0a, 0x10, 0x52, 0x61, 0x64, 0x69, 0x6f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x69, 0x74, 0x68, 0x43, 0x6f, 0x6f, 0x72,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x77, 0x69, 0x74, 0x68, 0x43, 0x6f, 0x6f,
	0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x69, 0x74, 0x68, 0x44, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x77, 0x69, 0x74, 0x68, 0x44, 0x69, 0x73, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x77, 0x69, 0x74, 0x68, 0x47, 0x65, 0x6f, 0x48, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x77, 0x69, 0x74, 0x68, 0x47, 0x65, 0x6f, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x22, 0x89, 0x01, 0x0a, 0x0b, 0x47, 0x65, 0x6f, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x6f, 0x6e, 0x67,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x4c, 0x6f, 0x6e,
	0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x74, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x4c, 0x61, 0x74, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x04, 0x44, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x65, 0x6f, 0x48, 0x61, 0x73,
	0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x47, 0x65, 0x6f, 0x48, 0x61, 0x73, 0x68,
	0x22, 0xf8, 0x01, 0x0a, 0x16, 0x52, 0x61, 0x64, 0x69, 0x6f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c,
	0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x28, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e,
	0x66, 0x6f, 0x6f, 0x64, 0x69, 0x4c, 0x42, 0x53, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x72,
	0x70, 0x75, 0x73, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xf4, 0x01, 0x0a, 0x12,
	0x52, 0x61, 0x64, 0x69, 0x6f, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x72, 0x61, 0x64, 0x69, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x72, 0x61, 0x64,
	0x69, 0x6f, 0x12, 0x2a, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x16, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x69, 0x4c, 0x42, 0x53, 0x2e, 0x4c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x43, 0x6f, 0x72, 0x70, 0x75, 0x73, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x28,
	0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x66,
	0x6f, 0x6f, 0x64, 0x69, 0x4c, 0x42, 0x53, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x72, 0x70,
	0x75, 0x73, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32,
	0x0a, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x69, 0x4c, 0x42, 0x53, 0x2e, 0x52, 0x61, 0x64, 0x69, 0x6f, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xc1, 0x01, 0x0a, 0x17, 0x52, 0x61, 0x64, 0x69, 0x6f, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x64, 0x69,
	0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x28, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14,
	0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x69, 0x4c, 0x42, 0x53, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x43, 0x6f,
	0x72, 0x70, 0x75, 0x73, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x44, 0x65, 0x6d, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x28, 0x0a, 0x10,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x44, 0x65, 0x6d, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x67, 0x69, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x72, 0x65, 0x67, 0x69, 0x73, 0x2a, 0x28, 0x0a, 0x0c, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x43, 0x6f, 0x72, 0x70, 0x75, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x4b, 0x49, 0x4c, 0x4f, 0x4d, 0x45,
	0x54, 0x45, 0x52, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x10, 0x01,
	0x2a, 0x1f, 0x0a, 0x0a, 0x53, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x72, 0x70, 0x75, 0x73, 0x12, 0x07,
	0x0a, 0x03, 0x41, 0x53, 0x43, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x53, 0x43, 0x10,
	0x01, 0x32, 0xa0, 0x04, 0x0a, 0x03, 0x67, 0x65, 0x6f, 0x12, 0x38, 0x0a, 0x06, 0x47, 0x65, 0x6f,
	0x41, 0x64, 0x64, 0x12, 0x17, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x69, 0x4c, 0x42, 0x53, 0x2e, 0x47,
	0x65, 0x6f, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x66,
	0x6f, 0x6f, 0x64, 0x69, 0x4c, 0x42, 0x53, 0x2e, 0x47, 0x65, 0x6f, 0x41, 0x64, 0x64, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x41, 0x0a, 0x0b, 0x47, 0x65, 0x6f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x19, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x69, 0x4c, 0x42, 0x53, 0x2e, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x66, 0x6f, 0x6f, 0x64, 0x69, 0x4c, 0x42, 0x53, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x35, 0x0a, 0x07, 0x47, 0x65, 0x6f, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x15, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x69, 0x4c, 0x42, 0x53, 0x2e, 0x48, 0x61, 0x73,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x69,
	0x4c, 0x42, 0x53, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x35, 0x0a,
	0x07, 0x47, 0x65, 0x6f, 0x44, 0x69, 0x73, 0x74, 0x12, 0x15, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x69,
	0x4c, 0x42, 0x53, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x13, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x69, 0x4c, 0x42, 0x53, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x44, 0x0a, 0x0a, 0x52, 0x61, 0x64, 0x69, 0x6f, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x1b, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x69, 0x4c, 0x42, 0x53, 0x2e, 0x52, 0x61,
	0x64, 0x69, 0x6f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x19, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x69, 0x4c, 0x42, 0x53, 0x2e, 0x52, 0x61, 0x64, 0x69, 0x6f,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4e, 0x0a, 0x0f, 0x52, 0x61,
	0x64, 0x69, 0x6f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x20, 0x2e,
	0x66, 0x6f, 0x6f, 0x64, 0x69, 0x4c, 0x42, 0x53, 0x2e, 0x52, 0x61, 0x64, 0x69, 0x6f, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x19, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x69, 0x4c, 0x42, 0x53, 0x2e, 0x52, 0x61, 0x64, 0x69, 0x6f,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x46, 0x0a, 0x0b, 0x52, 0x61,
	0x64, 0x69, 0x6f, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x66, 0x6f, 0x6f, 0x64,
	0x69, 0x4c, 0x42, 0x53, 0x2e, 0x52, 0x61, 0x64, 0x69, 0x6f, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x69, 0x4c,
	0x42, 0x53, 0x2e, 0x52, 0x61, 0x64, 0x69, 0x6f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x50, 0x0a, 0x10, 0x52, 0x61, 0x64, 0x69, 0x6f, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x21, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x69, 0x4c, 0x42,
	0x53, 0x2e, 0x52, 0x61, 0x64, 0x69, 0x6f, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x66, 0x6f, 0x6f, 0x64,
	0x69, 0x4c, 0x42, 0x53, 0x2e, 0x52, 0x61, 0x64, 0x69, 0x6f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x32, 0x4c, 0x0a, 0x08, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x12, 0x40, 0x0a, 0x04, 0x44, 0x65, 0x6d, 0x6f, 0x12, 0x1c, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x69,
	0x4c, 0x42, 0x53, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x44, 0x65, 0x6d, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x69, 0x4c, 0x42,
	0x53, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x44, 0x65, 0x6d, 0x6f, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x42, 0x27, 0x5a, 0x25, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x66, 0x6f, 0x6f, 0x64, 0x69, 0x2d, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x6f, 0x6f, 0x64, 0x69,
	0x2d, 0x6c, 0x62, 0x73, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_foodiLBS_proto_rawDescOnce sync.Once
	file_foodiLBS_proto_rawDescData = file_foodiLBS_proto_rawDesc
)

func file_foodiLBS_proto_rawDescGZIP() []byte {
	file_foodiLBS_proto_rawDescOnce.Do(func() {
		file_foodiLBS_proto_rawDescData = protoimpl.X.CompressGZIP(file_foodiLBS_proto_rawDescData)
	})
	return file_foodiLBS_proto_rawDescData
}

var file_foodiLBS_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_foodiLBS_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_foodiLBS_proto_goTypes = []interface{}{
	(LengthCorpus)(0),               // 0: foodiLBS.LengthCorpus
	(SortCorpus)(0),                 // 1: foodiLBS.SortCorpus
	(*GeoAddRequest)(nil),           // 2: foodiLBS.GeoAddRequest
	(*GeoAddReply)(nil),             // 3: foodiLBS.GeoAddReply
	(*PositionRequest)(nil),         // 4: foodiLBS.PositionRequest
	(*PositionReply)(nil),           // 5: foodiLBS.PositionReply
	(*Position)(nil),                // 6: foodiLBS.Position
	(*HashRequest)(nil),             // 7: foodiLBS.HashRequest
	(*HashReply)(nil),               // 8: foodiLBS.HashReply
	(*DistRequest)(nil),             // 9: foodiLBS.DistRequest
	(*DistReply)(nil),               // 10: foodiLBS.DistReply
	(*RadioOrderRequest)(nil),       // 11: foodiLBS.RadioOrderRequest
	(*RadioOrderReply)(nil),         // 12: foodiLBS.RadioOrderReply
	(*RadioOrderOption)(nil),        // 13: foodiLBS.RadioOrderOption
	(*GeoLocation)(nil),             // 14: foodiLBS.GeoLocation
	(*RadioOrderStoreRequest)(nil),  // 15: foodiLBS.RadioOrderStoreRequest
	(*RadioMemberRequest)(nil),      // 16: foodiLBS.RadioMemberRequest
	(*RadioMemberStoreRequest)(nil), // 17: foodiLBS.RadioMemberStoreRequest
	(*DeliverDemoRequest)(nil),      // 18: foodiLBS.DeliverDemoRequest
	(*DeliverDemoReply)(nil),        // 19: foodiLBS.DeliverDemoReply
}
var file_foodiLBS_proto_depIdxs = []int32{
	6,  // 0: foodiLBS.PositionReply.pos:type_name -> foodiLBS.Position
	0,  // 1: foodiLBS.DistRequest.lengthType:type_name -> foodiLBS.LengthCorpus
	0,  // 2: foodiLBS.RadioOrderRequest.lengthType:type_name -> foodiLBS.LengthCorpus
	13, // 3: foodiLBS.RadioOrderRequest.option:type_name -> foodiLBS.RadioOrderOption
	14, // 4: foodiLBS.RadioOrderReply.location:type_name -> foodiLBS.GeoLocation
	1,  // 5: foodiLBS.RadioOrderStoreRequest.sort:type_name -> foodiLBS.SortCorpus
	0,  // 6: foodiLBS.RadioMemberRequest.unit:type_name -> foodiLBS.LengthCorpus
	1,  // 7: foodiLBS.RadioMemberRequest.sort:type_name -> foodiLBS.SortCorpus
	13, // 8: foodiLBS.RadioMemberRequest.option:type_name -> foodiLBS.RadioOrderOption
	1,  // 9: foodiLBS.RadioMemberStoreRequest.sort:type_name -> foodiLBS.SortCorpus
	2,  // 10: foodiLBS.geo.GeoAdd:input_type -> foodiLBS.GeoAddRequest
	4,  // 11: foodiLBS.geo.GeoPosition:input_type -> foodiLBS.PositionRequest
	7,  // 12: foodiLBS.geo.GeoHash:input_type -> foodiLBS.HashRequest
	9,  // 13: foodiLBS.geo.GeoDist:input_type -> foodiLBS.DistRequest
	11, // 14: foodiLBS.geo.RadioOrder:input_type -> foodiLBS.RadioOrderRequest
	15, // 15: foodiLBS.geo.RadioOrderStore:input_type -> foodiLBS.RadioOrderStoreRequest
	16, // 16: foodiLBS.geo.RadioMember:input_type -> foodiLBS.RadioMemberRequest
	17, // 17: foodiLBS.geo.RadioMemberStore:input_type -> foodiLBS.RadioMemberStoreRequest
	18, // 18: foodiLBS.delivery.Demo:input_type -> foodiLBS.DeliverDemoRequest
	3,  // 19: foodiLBS.geo.GeoAdd:output_type -> foodiLBS.GeoAddReply
	5,  // 20: foodiLBS.geo.GeoPosition:output_type -> foodiLBS.PositionReply
	8,  // 21: foodiLBS.geo.GeoHash:output_type -> foodiLBS.HashReply
	10, // 22: foodiLBS.geo.GeoDist:output_type -> foodiLBS.DistReply
	12, // 23: foodiLBS.geo.RadioOrder:output_type -> foodiLBS.RadioOrderReply
	12, // 24: foodiLBS.geo.RadioOrderStore:output_type -> foodiLBS.RadioOrderReply
	12, // 25: foodiLBS.geo.RadioMember:output_type -> foodiLBS.RadioOrderReply
	12, // 26: foodiLBS.geo.RadioMemberStore:output_type -> foodiLBS.RadioOrderReply
	19, // 27: foodiLBS.delivery.Demo:output_type -> foodiLBS.DeliverDemoReply
	19, // [19:28] is the sub-list for method output_type
	10, // [10:19] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_foodiLBS_proto_init() }
func file_foodiLBS_proto_init() {
	if File_foodiLBS_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_foodiLBS_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeoAddRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foodiLBS_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeoAddReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foodiLBS_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PositionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foodiLBS_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PositionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foodiLBS_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Position); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foodiLBS_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HashRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foodiLBS_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HashReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foodiLBS_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foodiLBS_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DistReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foodiLBS_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RadioOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foodiLBS_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RadioOrderReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foodiLBS_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RadioOrderOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foodiLBS_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeoLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foodiLBS_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RadioOrderStoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foodiLBS_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RadioMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foodiLBS_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RadioMemberStoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foodiLBS_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliverDemoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_foodiLBS_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliverDemoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_foodiLBS_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_foodiLBS_proto_goTypes,
		DependencyIndexes: file_foodiLBS_proto_depIdxs,
		EnumInfos:         file_foodiLBS_proto_enumTypes,
		MessageInfos:      file_foodiLBS_proto_msgTypes,
	}.Build()
	File_foodiLBS_proto = out.File
	file_foodiLBS_proto_rawDesc = nil
	file_foodiLBS_proto_goTypes = nil
	file_foodiLBS_proto_depIdxs = nil
}
