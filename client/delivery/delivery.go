// Code generated by goctl. DO NOT EDIT.
// Source: foodiLBS.proto

package delivery

import (
	"context"

	"github.com/foodi-org/foodi-lbs-server/github.com/foodi-org/foodi-lbs-server"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	DeliverDemoReply        = foodi_lbs_server.DeliverDemoReply
	DeliverDemoRequest      = foodi_lbs_server.DeliverDemoRequest
	DistReply               = foodi_lbs_server.DistReply
	DistRequest             = foodi_lbs_server.DistRequest
	GeoAddReply             = foodi_lbs_server.GeoAddReply
	GeoAddRequest           = foodi_lbs_server.GeoAddRequest
	GeoLocation             = foodi_lbs_server.GeoLocation
	HashReply               = foodi_lbs_server.HashReply
	HashRequest             = foodi_lbs_server.HashRequest
	Position                = foodi_lbs_server.Position
	PositionReply           = foodi_lbs_server.PositionReply
	PositionRequest         = foodi_lbs_server.PositionRequest
	RadioMemberRequest      = foodi_lbs_server.RadioMemberRequest
	RadioMemberStoreRequest = foodi_lbs_server.RadioMemberStoreRequest
	RadioOrderOption        = foodi_lbs_server.RadioOrderOption
	RadioOrderReply         = foodi_lbs_server.RadioOrderReply
	RadioOrderRequest       = foodi_lbs_server.RadioOrderRequest
	RadioOrderStoreRequest  = foodi_lbs_server.RadioOrderStoreRequest

	Delivery interface {
		Demo(ctx context.Context, in *DeliverDemoRequest, opts ...grpc.CallOption) (*DeliverDemoReply, error)
	}

	defaultDelivery struct {
		cli zrpc.Client
	}
)

func NewDelivery(cli zrpc.Client) Delivery {
	return &defaultDelivery{
		cli: cli,
	}
}

func (m *defaultDelivery) Demo(ctx context.Context, in *DeliverDemoRequest, opts ...grpc.CallOption) (*DeliverDemoReply, error) {
	client := foodi_lbs_server.NewDeliveryClient(m.cli.Conn())
	return client.Demo(ctx, in, opts...)
}
